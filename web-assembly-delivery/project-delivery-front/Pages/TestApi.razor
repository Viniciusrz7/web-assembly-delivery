@page "/diagnostico"
@inject HttpClient Http
@using System.Text.Json

<h3>Página de Teste da Conexão</h3>

<button class="btn btn-primary" @onclick="ChamarBackend">Testar Conexão com Backend</button>

<hr/>

@if (mensagemStatus != null)
{
    <p>@mensagemStatus</p>
}

@if (respostaApi != null)
{
    <h4>Resposta do Backend:</h4>
    <pre style="background-color: #eee; padding: 1rem; border-radius: 5px;">@respostaApi</pre>
}

@code {
    private string? respostaApi;
    private string? mensagemStatus = "Clique no botão para começar.";

    private async Task ChamarBackend()
    {
        mensagemStatus = "Chamando o backend...";
        respostaApi = null;

        try
        {
            
            var resultado = await Http.GetAsync("weatherforecast");

            if (resultado.IsSuccessStatusCode)
            {
                
                var conteudoJson = await resultado.Content.ReadAsStringAsync();
                using var jsonDoc = JsonDocument.Parse(conteudoJson);
                respostaApi = JsonSerializer.Serialize(jsonDoc, new JsonSerializerOptions { WriteIndented = true });
                mensagemStatus = "Sucesso!";
            }
            else
            {
                
                mensagemStatus = $"Falha na resposta da API. Código: {resultado.StatusCode}";
            }
        }
        catch (Exception ex)
        {
            
            mensagemStatus = $"Erro de conexão: {ex.Message}";
        }
    }
}